#define BLACK 0
#define WHITE 1
#define INVERSE 2

#define SSD1306_I2C_ADDRESS   0x3C  // 011110+SA0+RW - 0x3C or 0x3D

#define SSD1306_LCDWIDTH                  128
#define SSD1306_LCDHEIGHT                 64

#define SSD1306_SETCONTRAST 0x81
#define SSD1306_DISPLAYALLON_RESUME 0xA4
#define SSD1306_DISPLAYALLON 0xA5
#define SSD1306_NORMALDISPLAY 0xA6
#define SSD1306_INVERTDISPLAY 0xA7
#define SSD1306_DISPLAYOFF 0xAE
#define SSD1306_DISPLAYON 0xAF

#define SSD1306_SETDISPLAYOFFSET 0xD3
#define SSD1306_SETCOMPINS 0xDA

#define SSD1306_SETVCOMDETECT 0xDB

#define SSD1306_SETDISPLAYCLOCKDIV 0xD5
#define SSD1306_SETPRECHARGE 0xD9

#define SSD1306_SETMULTIPLEX 0xA8

#define SSD1306_SETLOWCOLUMN 0x00
#define SSD1306_SETHIGHCOLUMN 0x10

#define SSD1306_SETSTARTLINE 0x40

#define SSD1306_MEMORYMODE 0x20
#define SSD1306_COLUMNADDR 0x21
#define SSD1306_PAGEADDR   0x22

#define SSD1306_COMSCANINC 0xC0
#define SSD1306_COMSCANDEC 0xC8

#define SSD1306_SEGREMAP 0xA0

#define SSD1306_CHARGEPUMP 0x8D

#define SSD1306_EXTERNALVCC 0x1
#define SSD1306_SWITCHCAPVCC 0x2

// Scrolling #defines
#define SSD1306_ACTIVATE_SCROLL 0x2F
#define SSD1306_DEACTIVATE_SCROLL 0x2E
#define SSD1306_SET_VERTICAL_SCROLL_AREA 0xA3
#define SSD1306_RIGHT_HORIZONTAL_SCROLL 0x26
#define SSD1306_LEFT_HORIZONTAL_SCROLL 0x27
#define SSD1306_VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL 0x29
#define SSD1306_VERTICAL_AND_LEFT_HORIZONTAL_SCROLL 0x2A


/*

uint8_t opCode = 0;					//When a command code comes in we copy it to this. Then we collect X payload bytes and execute command
uint8_t payLoadPointer = 0;			//What buffer position we are writing payload bytes to
uint8_t payLoad[4];					//Buffer to store command payload bytes as they stream in

uint8_t payLoadSize[] =    {0, 1, 0, 0, 0, 0, 0, 0,
							0, 0, 0, 0, 0, 0, 0, 0,
							0, 0, 0, 0, 0, 0, 0, 0,
							0, 0, 0, 0, 0, 0, 0, 1};
							
*/
							
const uint8_t font8x8[] PROGMEM = {    //The 8x8 text font with extended graphics and a set of tall letters

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x78, 0xbf, 0xdd, 0xed, 0xf5, 0xf9, 0x3f, 0xc7, 0xd9, 0x1d, 0xc5, 0xf9, 0x3f, 0xc7, 0xf9, 0x3d, 0xc5, 0xf9, 0x3f, 0x07, 0x80, 0xe0, 0xfc, 0x8f, 0xf4, 0x8d, 0xfd, 0xcd, 0xb7, 0xcf, 0xfc, 0xed, 0x85, 0xec, 0xff, 0xcf, 0x94, 0xad, 0xfd, 0xfc, 0x1f, 0x03, 0x00, 0x00, 0x08, 0x2a, 0x3e, 0x1c, 0x1c, 0x3e, 0x2a, 0x08, 0x00, 0x08, 0x08, 0x3e, 0x3e, 0x08, 0x08, 0x00, 0x00, 0x00, 0x80, 0xe0, 0x60, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x02, 0x00, 0x00, 0x3c, 0x7e, 0x52, 0x4a, 0x7e, 0x3c, 0x00, 0x00, 0x40, 0x44, 0x7e, 0x7e, 0x40, 0x40, 0x00, 0x00, 0x44, 0x66, 0x72, 0x5a, 0x4e, 0x44, 0x00, 0x00, 0x22, 0x62, 0x4a, 0x5e, 0x76, 0x22, 0x00, 0x00, 0x30, 0x38, 0x2c, 0x7e, 0x7e, 0x20, 0x00, 0x00, 0x2e, 0x6e, 0x4a, 0x4a, 0x7a, 0x32, 0x00, 0x00, 0x3c, 0x7e, 0x4a, 0x4a, 0x7a, 0x30, 0x00, 0x00, 0x02, 0x62, 0x72, 0x1a, 0x0e, 0x06, 0x00, 0x00, 0x34, 0x7e, 0x4a, 0x4a, 0x7e, 0x34, 0x00, 0x00, 0x04, 0x4e, 0x4a, 0x6a, 0x3e, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xec, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x1c, 0x3e, 0x7f, 0x00, 0x00, 0x00, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x00, 0x00, 0x00, 0x7f, 0x3e, 0x1c, 0x08, 0x00, 0x00, 0x00, 0x04, 0x06, 0x52, 0x5a, 0x0e, 0x04, 0x00, 0x00, 0x3c, 0x7e, 0x42, 0x5a, 0x5e, 0x5c, 0x00, 0x00, 0x78, 0x7c, 0x26, 0x26, 0x7c, 0x78, 0x00, 0x00, 0x7e, 0x7e, 0x4a, 0x4a, 0x7e, 0x34, 0x00, 0x00, 0x3c, 0x7e, 0x42, 0x42, 0x66, 0x24, 0x00, 0x00, 0x7e, 0x7e, 0x42, 0x66, 0x3c, 0x18, 0x00, 0x00, 0x7e, 0x7e, 0x4a, 0x4a, 0x4a, 0x42, 0x00, 0x00, 0x7e, 0x7e, 0x0a, 0x0a, 0x0a, 0x02, 0x00, 0x00, 0x3c, 0x7e, 0x42, 0x52, 0x72, 0x72, 0x00, 0x00, 0x7e, 0x7e, 0x08, 0x08, 0x7e, 0x7e, 0x00, 0x00, 0x42, 0x42, 0x7e, 0x7e, 0x42, 0x42, 0x00, 0x00, 0x20, 0x60, 0x40, 0x42, 0x7e, 0x3e, 0x00, 0x00, 0x7e, 0x7e, 0x18, 0x3c, 0x66, 0x42, 0x00, 0x00, 0x7e, 0x7e, 0x40, 0x40, 0x40, 0x40, 0x00, 0x00, 0x7e, 0x7e, 0x0c, 0x18, 0x0c, 0x7e, 0x7e, 0x00, 0x7e, 0x7e, 0x1c, 0x38, 0x7e, 0x7e, 0x00, 0x00, 0x3c, 0x7e, 0x42, 0x42, 0x7e, 0x3c, 0x00, 0x00, 0x7e, 0x7e, 0x12, 0x12, 0x1e, 0x0c, 0x00, 0x00, 0x3c, 0x7e, 0x42, 0x22, 0x7e, 0x5c, 0x00, 0x00, 0x7e, 0x7e, 0x12, 0x32, 0x7e, 0x4c, 0x00, 0x00, 0x04, 0x4e, 0x4a, 0x4a, 0x7a, 0x30, 0x00, 0x00, 0x02, 0x02, 0x7e, 0x7e, 0x02, 0x02, 0x00, 0x00, 0x7e, 0x7e, 0x40, 0x40, 0x7e, 0x7e, 0x00, 0x00, 0x1e, 0x3e, 0x60, 0x60, 0x3e, 0x1e, 0x00, 0x00, 0x7e, 0x7e, 0x30, 0x18, 0x30, 0x7e, 0x7e, 0x00, 0x66, 0x7e, 0x18, 0x18, 0x7e, 0x66, 0x00, 0x00, 0x06, 0x0e, 0x78, 0x78, 0x0e, 0x06, 0x00, 0x00, 0x62, 0x72, 0x5a, 0x4e, 0x46, 0x42, 0x00, 0x00, 0x08, 0x1c, 0x3e, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x40, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x3e, 0x1c, 0x08, 0x00, 0x7c, 0x5e, 0x5e, 0x5c, 0x5c, 0x5c, 0x44, 0x7c, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 

};

const uint8_t font4x8[] PROGMEM = {    //The 4x8 text font

0x00, 0x00, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x7e, 0x24, 0x7e, 0x00, 0x24, 0xcb, 0x34, 0x00, 0x62, 0x18, 0x46, 0x00, 0x3a, 0x65, 0x5a, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3c, 0x42, 0x00, 0x42, 0x3c, 0x00, 0x00, 0x2a, 0x1c, 0x2a, 0x00, 0x08, 0x3e, 0x08, 0x00, 0x80, 0x60, 0x00, 0x00, 0x08, 0x08, 0x08, 0x00, 0x00, 0x60, 0x00, 0x00, 0x60, 0x18, 0x06, 0x00, 0x7e, 0x42, 0x7e, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x72, 0x52, 0x5e, 0x00, 0x42, 0x52, 0x7e, 0x00, 0x1e, 0x10, 0x7e, 0x00, 0x5e, 0x52, 0x72, 0x00, 0x7e, 0x4a, 0x7a, 0x00, 0x02, 0x02, 0x7e, 0x00, 0x7e, 0x52, 0x7e, 0x00, 0x1e, 0x12, 0x7e, 0x00, 0x00, 0x24, 0x00, 0x00, 0x40, 0x24, 0x00, 0x00, 0x10, 0x28, 0x44, 0x00, 0x14, 0x14, 0x14, 0x00, 0x44, 0x28, 0x10, 0x00, 0x04, 0x52, 0x0c, 0x00, 0x3c, 0x42, 0x4c, 0x00, 0x7c, 0x12, 0x7c, 0x00, 0x7e, 0x4a, 0x34, 0x00, 0x3c, 0x42, 0x24, 0x00, 0x7e, 0x42, 0x3c, 0x00, 0x7e, 0x4a, 0x4a, 0x00, 0x7e, 0x0a, 0x0a, 0x00, 0x3c, 0x42, 0x34, 0x00, 0x7e, 0x08, 0x7e, 0x00, 0x42, 0x7e, 0x42, 0x00, 0x20, 0x40, 0x3e, 0x00, 0x7e, 0x08, 0x76, 0x00, 0x7e, 0x40, 0x40, 0x00, 0x7e, 0x04, 0x7e, 0x00, 0x7c, 0x18, 0x3e, 0x00, 0x3c, 0x42, 0x3c, 0x00, 0x7e, 0x12, 0x0c, 0x00, 0x3c, 0x62, 0x5c, 0x00, 0x7e, 0x12, 0x6c, 0x00, 0x24, 0x4a, 0x34, 0x00, 0x02, 0x7e, 0x02, 0x00, 0x7e, 0x40, 0x7e, 0x00, 0x3e, 0x40, 0x3e, 0x00, 0x7e, 0x20, 0x7e, 0x00, 0x76, 0x08, 0x76, 0x00, 0x06, 0x78, 0x06, 0x00, 0x62, 0x5a, 0x46, 0x00, 0x00, 0x7e, 0x42, 0x00, 0x06, 0x18, 0x60, 0x00, 0x42, 0x7e, 0x00, 0x00, 0x04, 0x02, 0x04, 0x00, 0x80, 0x80, 0x80, 0x80, 0x02, 0x04, 0x00, 0x00, 0x24, 0x54, 0x78, 0x00, 0x7e, 0x48, 0x30, 0x00, 0x38, 0x44, 0x44, 0x00, 0x30, 0x48, 0x7e, 0x00, 0x38, 0x54, 0x58, 0x00, 0x08, 0x7c, 0x0a, 0x00, 0x98, 0xa4, 0x7c, 0x00, 0x7e, 0x08, 0x70, 0x00, 0x48, 0x7a, 0x40, 0x00, 0x80, 0x88, 0x7a, 0x00, 0x7e, 0x10, 0x68, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x7c, 0x08, 0x7c, 0x00, 0x7c, 0x04, 0x78, 0x00, 0x38, 0x44, 0x38, 0x00, 0xfc, 0x24, 0x18, 0x00, 0x18, 0x24, 0xfc, 0x00, 0x78, 0x04, 0x04, 0x00, 0x48, 0x54, 0x24, 0x00, 0x08, 0x7e, 0x08, 0x00, 0x7c, 0x40, 0x7c, 0x00, 0x3c, 0x40, 0x3c, 0x00, 0x7c, 0x20, 0x7c, 0x00, 0x6c, 0x10, 0x6c, 0x00, 0x9c, 0xa0, 0x7c, 0x00, 0x64, 0x54, 0x4c, 0x00, 0x08, 0x36, 0x41, 0x00, 0x00, 0x77, 0x00, 0x00, 0x41, 0x36, 0x08, 0x00, 0x04, 0x0c, 0x08, 0x00, 0x7f, 0x7f, 0x7f, 0x7f, 

};
